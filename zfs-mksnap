#!/bin/bash
#
# https://github.com/jhgorrell/zfs-mksnap
#

# set -xv

#####

ZFS_MKSNAP_DATE_FMT=${ZFS_MKSNAP_DATE_FMT:-%Y%m%dT%H%M%S}

opt_all=0
opt_r=""
opt_snap_prefix=""
opt_snap_name=$(date "+${ZFS_MKSNAP_DATE_FMT}")

#####

function show_help () {
  cat <<EO_HELP

$(basename "${0}"): makes a ZFS snapshot, with a bunch of defaults.

SYNOPSIS:

   $(basename "${0}") [OPTIONS] [PATHS]

OPTIONS:

  --help|-h = this help

  -r = Recursive snapshot

  --all = snapshot all the top level snaps.
          implies "-r"

  --snapname|--name|-n = The name of the snapshot.
                         (default: ${opt_snap_name})

  --prefix|-p = Prefix to the date.
                (example: PREFIX-${opt_snap_name})

  If not paths are given, uses the current dir. (".")

EO_HELP
}

#####

while [[ 0 -lt "${#}" ]]
do
  if [[ ! "${1:-}" = -* ]]
  then
    break
  fi
  #
  arg="${1:-}"
  shift

  case "${arg}" in
    --help|-h)
      show_help
      exit 0
      ;;

    --all)
      opt_all=1
      opt_r="-r"
      ;;

    -r)
      opt_r="-r"
      ;;

    --snapname|--name|-n)
      opt_snap_name="${1:-}"
      shift
      ;;

    --prefix|-p)
      opt_snap_prefix="${1:-}"
      shift
      ;;

    *)
      show_help
      exit 1
      ;;
  esac
done

#
if [[ "${*}" = "" ]]
then
  set - "."
fi

#####

if [[ "${opt_all}" = 1 ]]
then
  #
  all_dset_lst=$(zfs list -d0 -H -o name)
  for dset in ${all_dset_lst}
  do
    cmd="sudo zfs snap ${opt_r} ${dset}@${opt_snap_prefix}${opt_snap_name}"
    echo "### CMD: '${cmd}'"
    eval "${cmd}"
  done
  exit 0
fi

###

for fs_path in "${@}"
do
  fs_type=$(df --output=fstype "${fs_path}" | tail -n +2)
  fs_source=$(df --output=source "${fs_path}" | tail -n +2)
  if [[ "${fs_type}" = "zfs" ]]
  then
    cmd="sudo zfs snap ${opt_r} ${fs_source}@${opt_snap_prefix}${opt_snap_name}"
    echo "### CMD: '${cmd}'"
    eval "${cmd}"
  else
    echo "### '${fs_path}' is not zfs: '${fs_source}' is '${fs_type}'"
  fi
done
